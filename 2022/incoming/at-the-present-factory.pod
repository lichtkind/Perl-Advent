Author: lichtkind@cpan.org
Title: At the Present Factory
Topic: charts, automation

=encoding utf8

=head1 At the Present Factory

Yes we want to put a heavinly smile on faces of people we treasure.
But the expenses need to be kept in check - so lets create some bar charts.

=head2 Grabbig some code

The fastest start we get by copying some example from L<Chart::Manual::Types>, 
where all details are explained. Then we change the first dataset 
(animal names => gift recipients), and paste into the following sets our numbers.
At last we label axis and legend and a first draft is ready:

=begin perl

    use Chart::Bars;
    my $g = Chart::Bars->new( 600, 600 );
    $g->add_dataset( qw/ Peter Paul Mary/ );
    $g->add_dataset( 30, 40, 80 );
    $g->add_dataset( 80, 60, 30 );
    $g->add_dataset( 50, 30, 60 );
    $g->set(
        title         => 'Christmas Expenses',
        x_label       => 'Recipient',
        y_label       => 'Amount',
        legend_labels => ['2020', '2021', '2022'],    
        y_grid_lines  => 'true',
        min_val       =>  0,
        precision     =>  0,
        colors => {
            y_grid_lines => 'gray70',
            misc         => 'gray55',
            text         => 'gray55',
            x_label      => 'gray40',
            y_label      => 'gray40',
            title        => 'gray20',
        },
    );
    $g->png("bars1.png");

=end perl

=begin html
<img src="https://raw.githubusercontent.com/lichtkind/Chart/main/dev/example/advent/bars1.png"    alt="first bar chart"  width="300" height="300">
=end html


=head2 Finding Colors

The only issue now are the dataset colors, which are optimized for contrast (they scream).
Intuitive would be to have shades of the same color to signify that neighbouring
bars are about the same person, only some numbers are older than others.
To achieve that pick some appealing color from the table in the lower half of 
L< Graphics::Toolkit::Color::Constant>. I like C<'royalblue3'> of the I<CSS>
standard. It also has the advantage of providing a workable gradient (list of
shades) for free. So just add:

=begin perl

        colors => { ..
            dataset0     => 'royalblue3',
            dataset1     => 'royalblue2',
            dataset2     => 'royalblue1',
        },

=end perl

=begin html
<img src="https://raw.githubusercontent.com/lichtkind/Chart/main/dev/example/advent/bars2.png"    alt="first bar chart"  width="300" height="300">
=end html

=head2 Customize Colors


What's a bit counterintuitive: first row of data set by C<add_dataset> 
are just X-axis-labels and next is C<dataset0>. Beside that it doesn look
quite right. Coudn't I just tweak the shades a bit ? Or what to do if we 
need more shades of blue?


complementary


=begin perl

    use Graphics::Toolkit::Color 'color';
    
=end perl

=head2 Opening a chart bakery

perl script.pl input.tsv > output.png



=cut



=begin perl

    ..
    $g->add_dataset( qw/ Peter Paul Mary/ );
    $g->add_datafile( $file );
    ..
    binmode STDOUT;
    print STDOUT $g->scalar_png;

=end perl

L<all examples|https://github.com/lichtkind/Chart/tree/main/dev/example/advent>

'input.tsv'